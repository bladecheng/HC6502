;
; File generated by cc65 v 2.17 - Git 180bb082
;
	.fopt		compiler,"cc65 v 2.17 - Git 180bb082"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		_strtoul
	.import		_strcmp
	.import		_strlen
	.import		_memset
	.importzp	_seconds
	.importzp	_minutes
	.importzp	_hours
	.import		_uart_printf
	.import		_gpio_init
	.import		_gpio_write
	.import		_gpio_read
	.import		_ps2_process
	.import		_ps2_getc
	.import		_vga_printf
	.import		_vga_ctrl
	.export		_shell_cmd
	.export		_argc
	.export		_argv
	.export		_ci
	.export		_cook
	.export		_gi
	.export		_gi_get
	.export		_uart_shell

.segment	"DATA"

_shell_cmd:
	.word	$0000
_argv:
	.word	$0000
	.res	10,$00
_ci:
	.addr	L0013
	.addr	_cmd_read
	.addr	L0016
	.addr	L0018
	.addr	_cmd_write
	.addr	L001B
	.addr	L001D
	.addr	_cmd_exec
	.addr	L0020
	.addr	L0022
	.addr	_cmd_dumpw
	.addr	L0025
	.addr	L0027
	.addr	_cmd_dumpb
	.addr	L002A
	.addr	L002C
	.addr	_cmd_gpio
	.addr	L002F
	.addr	L0031
	.addr	_cmd_ps2
	.addr	L0034
	.addr	L0036
	.addr	_cmd_vga
	.addr	L0039
	.addr	L003B
	.addr	_cmd_uptime
	.addr	L003E
	.addr	L0040
	.addr	_cmd_help
	.addr	L0043
_gi:
	.byte	$56,$49,$41,$31,$5F,$50,$41,$30,$00
	.res	7,$00
	.dword	$7F2000A0
	.byte	$56,$49,$41,$31,$5F,$50,$41,$31,$00
	.res	7,$00
	.dword	$7F2000A1
	.byte	$56,$49,$41,$31,$5F,$50,$41,$32,$00
	.res	7,$00
	.dword	$7F2000A2
	.byte	$56,$49,$41,$31,$5F,$50,$41,$33,$00
	.res	7,$00
	.dword	$7F2000A3
	.byte	$56,$49,$41,$31,$5F,$50,$41,$34,$00
	.res	7,$00
	.dword	$7F2000A4
	.byte	$56,$49,$41,$31,$5F,$50,$41,$35,$00
	.res	7,$00
	.dword	$7F2000A5
	.byte	$56,$49,$41,$31,$5F,$50,$41,$36,$00
	.res	7,$00
	.dword	$7F2000A6
	.byte	$56,$49,$41,$31,$5F,$50,$41,$37,$00
	.res	7,$00
	.dword	$7F2000A7
	.byte	$56,$49,$41,$31,$5F,$50,$42,$30,$00
	.res	7,$00
	.dword	$7F2000B0
	.byte	$56,$49,$41,$31,$5F,$50,$42,$31,$00
	.res	7,$00
	.dword	$7F2000B1
	.byte	$56,$49,$41,$31,$5F,$50,$42,$32,$00
	.res	7,$00
	.dword	$7F2000B2
	.byte	$56,$49,$41,$31,$5F,$50,$42,$33,$00
	.res	7,$00
	.dword	$7F2000B3
	.byte	$56,$49,$41,$31,$5F,$50,$42,$34,$00
	.res	7,$00
	.dword	$7F2000B4
	.byte	$56,$49,$41,$31,$5F,$50,$42,$35,$00
	.res	7,$00
	.dword	$7F2000B5
	.byte	$56,$49,$41,$31,$5F,$50,$42,$36,$00
	.res	7,$00
	.dword	$7F2000B6
	.byte	$56,$49,$41,$31,$5F,$50,$42,$37,$00
	.res	7,$00
	.dword	$7F2000B7
	.byte	$56,$49,$41,$32,$5F,$50,$41,$30,$00
	.res	7,$00
	.dword	$7F4000A0
	.byte	$56,$49,$41,$32,$5F,$50,$41,$31,$00
	.res	7,$00
	.dword	$7F4000A1
	.byte	$56,$49,$41,$32,$5F,$50,$41,$32,$00
	.res	7,$00
	.dword	$7F4000A2
	.byte	$56,$49,$41,$32,$5F,$50,$41,$33,$00
	.res	7,$00
	.dword	$7F4000A3
	.byte	$56,$49,$41,$32,$5F,$50,$41,$34,$00
	.res	7,$00
	.dword	$7F4000A4
	.byte	$56,$49,$41,$32,$5F,$50,$41,$35,$00
	.res	7,$00
	.dword	$7F4000A5
	.byte	$56,$49,$41,$32,$5F,$50,$41,$36,$00
	.res	7,$00
	.dword	$7F4000A6
	.byte	$56,$49,$41,$32,$5F,$50,$41,$37,$00
	.res	7,$00
	.dword	$7F4000A7
	.byte	$56,$49,$41,$32,$5F,$50,$42,$30,$00
	.res	7,$00
	.dword	$7F4000B0
	.byte	$56,$49,$41,$32,$5F,$50,$42,$31,$00
	.res	7,$00
	.dword	$7F4000B1
	.byte	$56,$49,$41,$32,$5F,$50,$42,$32,$00
	.res	7,$00
	.dword	$7F4000B2
	.byte	$56,$49,$41,$32,$5F,$50,$42,$33,$00
	.res	7,$00
	.dword	$7F4000B3
	.byte	$56,$49,$41,$32,$5F,$50,$42,$34,$00
	.res	7,$00
	.dword	$7F4000B4
	.byte	$56,$49,$41,$32,$5F,$50,$42,$35,$00
	.res	7,$00
	.dword	$7F4000B5
	.byte	$56,$49,$41,$32,$5F,$50,$42,$36,$00
	.res	7,$00
	.dword	$7F4000B6
	.byte	$56,$49,$41,$32,$5F,$50,$42,$37,$00
	.res	7,$00
	.dword	$7F4000B7

.segment	"RODATA"

L003E:
	.byte	$75,$70,$74,$69,$6D,$65,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$70,$72,$69,$6E,$74,$20,$63,$75,$72,$72
	.byte	$65,$6E,$74,$20,$74,$69,$6D,$65,$00
L0016:
	.byte	$72,$20,$20,$20,$20,$20,$5B,$61,$64,$64,$72,$5D,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$72,$65,$61,$64,$20,$20,$20,$20,$61,$6E
	.byte	$79,$20,$61,$64,$64,$72,$00
L002A:
	.byte	$64,$75,$6D,$70,$62,$20,$5B,$61,$64,$64,$72,$5D,$20,$5B,$62,$79
	.byte	$74,$65,$5F,$6E,$75,$6D,$5D,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$64,$75,$6D,$70,$20,$20,$20,$20,$61,$6E
	.byte	$79,$20,$61,$64,$64,$72,$00
L0025:
	.byte	$64,$75,$6D,$70,$77,$20,$5B,$61,$64,$64,$72,$5D,$20,$5B,$77,$6F
	.byte	$72,$64,$5F,$6E,$75,$6D,$5D,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$64,$75,$6D,$70,$20,$20,$20,$20,$61,$6E
	.byte	$79,$20,$61,$64,$64,$72,$00
L0020:
	.byte	$78,$20,$20,$20,$20,$20,$5B,$61,$64,$64,$72,$5D,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$65,$78,$65,$63,$75,$74,$65,$20,$61,$6E
	.byte	$79,$20,$61,$64,$64,$72,$00
L001B:
	.byte	$77,$20,$20,$20,$20,$20,$5B,$61,$64,$64,$72,$5D,$20,$5B,$64,$61
	.byte	$74,$61,$5D,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$77,$72,$69,$74,$65,$20,$20,$20,$61,$6E
	.byte	$79,$20,$61,$64,$64,$72,$00
L0034:
	.byte	$70,$73,$32,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$72,$65,$61,$64,$20,$70,$73,$32,$20,$69
	.byte	$6E,$70,$75,$74,$00
L0043:
	.byte	$68,$65,$6C,$70,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$70,$72,$69,$6E,$74,$20,$63,$6D,$64,$20
	.byte	$69,$6E,$66,$6F,$00
L002F:
	.byte	$67,$70,$69,$6F,$20,$20,$69,$6E,$69,$74,$7C,$72,$65,$61,$64,$7C
	.byte	$77,$72,$69,$74,$65,$20,$5B,$56,$49,$41,$31,$5F,$50,$41,$30,$2E
	.byte	$2E,$2E,$5D,$20,$20,$20,$63,$74,$72,$6C,$20,$61,$6E,$79,$20,$67
	.byte	$70,$69,$6F,$00
L0039:
	.byte	$76,$67,$61,$20,$20,$20,$63,$6D,$64,$20,$61,$72,$67,$73,$2E,$2E
	.byte	$2E,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$76,$67,$61,$20,$63,$74,$72,$6C,$00
L00AF:
	.byte	$65,$78,$65,$63,$20,$30,$78,$25,$78,$20,$28,$30,$78,$25,$78,$20
	.byte	$30,$78,$25,$78,$20,$30,$78,$25,$78,$20,$30,$78,$25,$78,$29,$20
	.byte	$72,$65,$74,$75,$72,$6E,$20,$30,$78,$25,$78,$0D,$0A,$00
L0250:
	.byte	$67,$70,$69,$6F,$20,$69,$6E,$69,$74,$20,$5B,$67,$70,$69,$6F,$5F
	.byte	$6E,$75,$6D,$5D,$20,$5B,$69,$6E,$7C,$6F,$75,$74,$5D,$0D,$0A,$00
L023F:
	.byte	$75,$6E,$6B,$6E,$6F,$77,$6E,$20,$67,$70,$69,$6F,$20,$6E,$75,$6D
	.byte	$20,$5B,$25,$73,$5D,$0D,$0A,$00
L027B:
	.byte	$67,$70,$69,$6F,$20,$72,$65,$61,$64,$20,$72,$65,$74,$75,$72,$6E
	.byte	$20,$25,$64,$0D,$0A,$00
L039C:
	.byte	$69,$6C,$6C,$65,$67,$61,$6C,$20,$63,$6D,$64,$20,$5B,$25,$73,$5D
	.byte	$20,$0D,$0A,$00
L026A:
	.byte	$75,$6E,$6B,$6E,$6F,$77,$6E,$20,$6D,$6F,$64,$65,$20,$5B,$25,$73
	.byte	$5D,$0D,$0A,$00
L0081:
	.byte	$5B,$30,$78,$25,$78,$5D,$20,$3C,$2D,$20,$28,$30,$78,$25,$78,$29
	.byte	$0D,$0A,$00
L030F:
	.byte	$76,$67,$61,$5F,$70,$72,$69,$6E,$74,$66,$20,$5B,$25,$73,$5D,$0D
	.byte	$0A,$00
L02A7:
	.byte	$76,$67,$61,$20,$63,$6C,$65,$61,$72,$20,$73,$74,$61,$72,$74,$0D
	.byte	$0A,$00
L02AC:
	.byte	$76,$67,$61,$20,$63,$6C,$65,$61,$72,$20,$65,$6E,$64,$20,$20,$0D
	.byte	$0A,$00
L00E0:
	.byte	$0D,$0A,$5B,$30,$78,$25,$30,$34,$78,$5D,$3A,$20,$00
L0134	:=	L00E0+0
L03A7:
	.byte	$72,$65,$74,$75,$72,$6E,$20,$30,$78,$25,$78,$00
L00C9	:=	L00E0+2
L031B:
	.byte	$25,$64,$3A,$25,$64,$3A,$25,$64,$0D,$0A,$00
L0105	:=	L00E0+2
L032F:
	.byte	$25,$73,$3A,$09,$09,$25,$73,$0D,$0A,$00
L004D:
	.byte	$5B,$30,$78,$25,$78,$5D,$3A,$20,$00
L03AC:
	.byte	$0D,$0A,$68,$63,$6F,$73,$23,$00
L00D5:
	.byte	$30,$78,$25,$30,$34,$78,$20,$00
L0056	:=	L00AF+39
L003B:
	.byte	$75,$70,$74,$69,$6D,$65,$00
L030B:
	.byte	$70,$72,$69,$6E,$74,$66,$00
L011E:
	.byte	$25,$30,$32,$78,$20,$00
L014B	:=	L011E+0
L02E3:
	.byte	$73,$68,$65,$6C,$6C,$00
L0022:
	.byte	$64,$75,$6D,$70,$77,$00
L02A3:
	.byte	$63,$6C,$65,$61,$72,$00
L0283:
	.byte	$77,$72,$69,$74,$65,$00
L0027:
	.byte	$64,$75,$6D,$70,$62,$00
L0248:
	.byte	$69,$6E,$69,$74,$00
L02B3:
	.byte	$66,$69,$6C,$6C,$00
L002C	:=	L002F+47
L0274:
	.byte	$72,$65,$61,$64,$00
L0040:
	.byte	$68,$65,$6C,$70,$00
L0036:
	.byte	$76,$67,$61,$00
L0154:
	.byte	$20,$20,$20,$00
L0314:
	.byte	$25,$73,$0A,$00
L0031:
	.byte	$70,$73,$32,$00
L02C4:
	.byte	$73,$65,$74,$00
L0262:
	.byte	$6F,$75,$74,$00
L0168	:=	L00AF+43
L00E5	:=	L00AF+43
L0162:
	.byte	$25,$63,$00
L0157	:=	L0154+1
L0123	:=	L0154+1
L0298	:=	L00AF+43
L0391	:=	L00AF+43
L012E	:=	L0162+0
L0257:
	.byte	$69,$6E,$00
L0013	:=	L0016+53
L001D	:=	L03A7+10
L028D:
	.byte	$30,$00
L0018	:=	L0022+4

.segment	"BSS"

_argc:
	.res	1,$00

; ---------------------------------------------------------------
; long __near__ cmd_read (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_cmd_read: near

.segment	"CODE"

	jsr     decsp3
	lda     _argv+2
	ldx     _argv+2+1
	jsr     pushax
	jsr     push0
	jsr     _strtoul
	ldy     #$01
	jsr     staxysp
	lda     #<(L004D)
	ldx     #>(L004D)
	jsr     pushax
	ldy     #$06
	jsr     pushwysp
	ldy     #$04
	jsr     _uart_printf
	ldy     #$02
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	sta     (sp),y
	lda     #<(L0056)
	ldx     #>(L0056)
	jsr     pushax
	ldy     #$02
	lda     (sp),y
	jsr     pusha0
	ldy     #$04
	jsr     _uart_printf
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	jmp     incsp3

.endproc

; ---------------------------------------------------------------
; long __near__ cmd_write (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_cmd_write: near

.segment	"CODE"

	jsr     decsp7
	ldx     #$00
	lda     _argc
	cmp     #$03
	bcs     L03AF
	dex
	stx     sreg
	stx     sreg+1
	txa
	jmp     incsp7
L03AF:	lda     _argc
	jsr     decax2
	ldy     #$01
	jsr     staxysp
	cpx     #$00
	bne     L0062
	cmp     #$11
L0062:	bcs     L0063
	ldy     #$02
	jsr     ldaxysp
	jmp     L0065
L0063:	ldx     #$00
	lda     #$10
L0065:	ldy     #$01
	jsr     staxysp
	lda     _argv+2
	ldx     _argv+2+1
	jsr     pushax
	jsr     push0
	jsr     _strtoul
	ldy     #$03
	jsr     staxysp
	ldx     #$00
	txa
L03B1:	ldy     #$05
	jsr     staxysp
	ldy     #$01
	cmp     (sp),y
	txa
	iny
	sbc     (sp),y
	bcs     L006E
	ldy     #$06
	jsr     ldaxysp
	jsr     incax2
	jsr     aslax1
	clc
	adc     #<(_argv)
	tay
	txa
	adc     #>(_argv)
	tax
	tya
	jsr     pushw
	jsr     push0
	jsr     _strtoul
	ldy     #$00
	sta     (sp),y
	ldy     #$06
	jsr     ldaxysp
	clc
	ldy     #$03
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	ldy     #$00
	lda     (sp),y
	sta     (ptr1),y
	lda     #<(L0081)
	ldx     #>(L0081)
	jsr     pushax
	ldy     #$08
	jsr     ldaxysp
	clc
	ldy     #$05
	adc     (sp),y
	pha
	txa
	iny
	adc     (sp),y
	tax
	pla
	jsr     pushax
	ldy     #$04
	lda     (sp),y
	jsr     pusha0
	ldy     #$06
	jsr     _uart_printf
	ldy     #$06
	jsr     ldaxysp
	jsr     incax1
	jmp     L03B1
L006E:	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	jmp     incsp7

.endproc

; ---------------------------------------------------------------
; long __near__ cmd_exec (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_cmd_exec: near

.segment	"CODE"

	ldy     #$10
	jsr     subysp
	lda     _argv+2
	ldx     _argv+2+1
	jsr     pushax
	jsr     push0
	jsr     _strtoul
	ldy     #$0A
	jsr     staxysp
	lda     _argv+4
	ldx     _argv+4+1
	jsr     pushax
	jsr     push0
	jsr     _strtoul
	ldy     #$08
	jsr     staxysp
	lda     _argv+6
	ldx     _argv+6+1
	jsr     pushax
	jsr     push0
	jsr     _strtoul
	ldy     #$06
	jsr     staxysp
	lda     _argv+8
	ldx     _argv+8+1
	jsr     pushax
	jsr     push0
	jsr     _strtoul
	ldy     #$04
	jsr     staxysp
	lda     _argv+10
	ldx     _argv+10+1
	jsr     pushax
	jsr     push0
	jsr     _strtoul
	ldy     #$02
	jsr     staxysp
	ldy     #$0B
	jsr     ldaxysp
	jsr     stax0sp
	jsr     pushax
	ldy     #$0D
	jsr     pushwysp
	ldy     #$0D
	jsr     pushwysp
	ldy     #$0D
	jsr     pushwysp
	ldy     #$0D
	jsr     pushwysp
	ldy     #$09
	jsr     ldaxysp
	jsr     callax
	jsr     incsp2
	ldy     #$0C
	jsr     steaxysp
	lda     #<(L00AF)
	ldx     #>(L00AF)
	jsr     pushax
	ldy     #$0F
	jsr     pushwysp
	ldy     #$0F
	jsr     pushwysp
	ldy     #$0F
	jsr     pushwysp
	ldy     #$0F
	jsr     pushwysp
	ldy     #$0F
	jsr     pushwysp
	ldy     #$1B
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$10
	jsr     _uart_printf
	ldy     #$0F
	jsr     ldeaxysp
	ldy     #$10
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; long __near__ cmd_dumpw (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_cmd_dumpw: near

.segment	"CODE"

	ldy     #$0A
	jsr     subysp
	lda     _argv+2
	ldx     _argv+2+1
	jsr     pushax
	jsr     push0
	jsr     _strtoul
	ldy     #$02
	jsr     staxysp
	lda     _argv+4
	ldx     _argv+4+1
	jsr     pushax
	jsr     push0
	jsr     _strtoul
	jsr     stax0sp
	ldy     #$03
	jsr     ldaxysp
	ldy     #$04
	jsr     staxysp
	lda     #<(L00C9)
	ldx     #>(L00C9)
	jsr     pushax
	ldy     #$09
	jsr     pushwysp
	ldy     #$04
	jsr     _uart_printf
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	ldy     #$06
	jsr     steaxysp
L00CD:	ldy     #$09
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$05
	jsr     ldaxysp
	jsr     axulong
	jsr     tosulteax
	beq     L00CE
	lda     #<(L00D5)
	ldx     #>(L00D5)
	jsr     pushax
	ldy     #$09
	jsr     pushwysp
	ldy     #$0D
	jsr     ldeaxysp
	jsr     saveeax
	ldy     #$01
	jsr     inceaxy
	ldy     #$0A
	jsr     steaxysp
	jsr     resteax
	jsr     aslax1
	jsr     tosaddax
	jsr     pushw
	ldy     #$04
	jsr     _uart_printf
	ldy     #$09
	jsr     ldeaxysp
	jsr     pusheax
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	jsr     tosneeax
	beq     L00CD
	ldy     #$09
	jsr     ldeaxysp
	ldx     #$00
	and     #$03
	jsr     push0ax
	txa
	jsr     toseqeax
	beq     L00CD
	lda     #<(L00E0)
	ldx     #>(L00E0)
	jsr     pushax
	ldy     #$09
	jsr     pushwysp
	ldy     #$0D
	jsr     ldeaxysp
	jsr     aslax1
	jsr     tosaddax
	jsr     pushax
	ldy     #$04
	jsr     _uart_printf
	jmp     L00CD
L00CE:	lda     #<(L00E5)
	ldx     #>(L00E5)
	jsr     pushax
	ldy     #$02
	jsr     _uart_printf
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	ldy     #$0A
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; long __near__ cmd_dumpb (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_cmd_dumpb: near

.segment	"CODE"

	ldy     #$22
	jsr     subysp
	lda     _argv+2
	ldx     _argv+2+1
	jsr     pushax
	jsr     push0
	jsr     _strtoul
	ldy     #$06
	jsr     staxysp
	lda     _argv+4
	ldx     _argv+4+1
	jsr     pushax
	jsr     push0
	jsr     _strtoul
	ldy     #$04
	jsr     staxysp
	ldy     #$07
	jsr     ldaxysp
	ldy     #$18
	jsr     staxysp
	ldy     #$05
	jsr     ldaxysp
	jsr     shrax4
	ldy     #$02
	jsr     staxysp
	ldy     #$04
	lda     (sp),y
	ldx     #$00
	and     #$0F
	jsr     stax0sp
	lda     #<(L0105)
	ldx     #>(L0105)
	jsr     pushax
	ldy     #$1D
	jsr     pushwysp
	ldy     #$04
	jsr     _uart_printf
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	ldy     #$1E
	jsr     steaxysp
L0109:	ldy     #$21
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$07
	jsr     ldaxysp
	jsr     axulong
	jsr     tosulteax
	jeq     L010A
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	ldy     #$1A
	jsr     steaxysp
L0111:	ldy     #$1D
	jsr     ldeaxysp
	cmp     #$10
	txa
	sbc     #$00
	lda     sreg
	sbc     #$00
	lda     sreg+1
	sbc     #$00
	bcs     L0112
	lda     #$08
	jsr     leaa0sp
	ldy     #$1A
	clc
	adc     (sp),y
	pha
	txa
	iny
	adc     (sp),y
	tax
	pla
	jsr     pushax
	ldy     #$1D
	jsr     pushwysp
	ldy     #$25
	jsr     ldeaxysp
	jsr     shleax4
	jsr     pusheax
	ldy     #$25
	jsr     ldeaxysp
	jsr     tosaddeax
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	jsr     staspidx
	lda     #<(L011E)
	ldx     #>(L011E)
	jsr     pushax
	lda     #$0A
	jsr     leaa0sp
	ldy     #$1C
	clc
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	ldx     #$00
	lda     (ptr1,x)
	jsr     pusha0
	ldy     #$04
	jsr     _uart_printf
	ldy     #$1D
	jsr     ldeaxysp
	jsr     saveeax
	ldy     #$01
	jsr     inceaxy
	ldy     #$1A
	jsr     steaxysp
	jsr     resteax
	jmp     L0111
L0112:	lda     #<(L0123)
	ldx     #>(L0123)
	jsr     pushax
	ldy     #$02
	jsr     _uart_printf
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	ldy     #$1A
	jsr     steaxysp
L0125:	ldy     #$1D
	jsr     ldeaxysp
	cmp     #$10
	txa
	sbc     #$00
	lda     sreg
	sbc     #$00
	lda     sreg+1
	sbc     #$00
	bcs     L0126
	lda     #<(L012E)
	ldx     #>(L012E)
	jsr     pushax
	lda     #$0A
	jsr     leaa0sp
	ldy     #$1C
	clc
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	jsr     pusha
	jsr     _cook
	jsr     pushax
	ldy     #$04
	jsr     _uart_printf
	ldy     #$1D
	jsr     ldeaxysp
	jsr     saveeax
	ldy     #$01
	jsr     inceaxy
	ldy     #$1A
	jsr     steaxysp
	jsr     resteax
	jmp     L0125
L0126:	lda     #<(L0134)
	ldx     #>(L0134)
	jsr     pushax
	ldy     #$1D
	jsr     pushwysp
	ldy     #$25
	jsr     ldeaxysp
	ldy     #$01
	jsr     inceaxy
	jsr     shleax4
	jsr     tosaddax
	jsr     pushax
	ldy     #$04
	jsr     _uart_printf
	ldy     #$21
	jsr     ldeaxysp
	jsr     saveeax
	ldy     #$01
	jsr     inceaxy
	ldy     #$1E
	jsr     steaxysp
	jsr     resteax
	jmp     L0109
L010A:	ldy     #$00
	lda     (sp),y
	iny
	ora     (sp),y
	jeq     L015A
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	ldy     #$1A
	jsr     steaxysp
L013C:	ldy     #$1D
	jsr     ldeaxysp
	cmp     #$10
	txa
	sbc     #$00
	lda     sreg
	sbc     #$00
	lda     sreg+1
	sbc     #$00
	jcs     L013D
	ldy     #$1D
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$05
	jsr     ldaxysp
	jsr     axulong
	jsr     tosulteax
	beq     L0144
	lda     #$08
	jsr     leaa0sp
	ldy     #$1A
	clc
	adc     (sp),y
	pha
	txa
	iny
	adc     (sp),y
	tax
	pla
	jsr     pushax
	ldy     #$1D
	jsr     pushwysp
	ldy     #$25
	jsr     ldeaxysp
	jsr     shleax4
	jsr     pusheax
	ldy     #$25
	jsr     ldeaxysp
	jsr     tosaddeax
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	jsr     staspidx
	lda     #<(L014B)
	ldx     #>(L014B)
	jsr     pushax
	lda     #$0A
	jsr     leaa0sp
	ldy     #$1C
	clc
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	ldx     #$00
	lda     (ptr1,x)
	jsr     pusha0
	ldy     #$04
	jmp     L03B2
L0144:	lda     #$08
	jsr     leaa0sp
	ldy     #$1A
	clc
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	lda     #$20
	ldy     #$00
	sta     (ptr1),y
	lda     #<(L0154)
	ldx     #>(L0154)
	jsr     pushax
	ldy     #$02
L03B2:	jsr     _uart_printf
	ldy     #$1D
	jsr     ldeaxysp
	jsr     saveeax
	ldy     #$01
	jsr     inceaxy
	ldy     #$1A
	jsr     steaxysp
	jsr     resteax
	jmp     L013C
L013D:	lda     #<(L0157)
	ldx     #>(L0157)
	jsr     pushax
	ldy     #$02
	jsr     _uart_printf
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	ldy     #$1A
	jsr     steaxysp
L0159:	ldy     #$1D
	jsr     ldeaxysp
	cmp     #$10
	txa
	sbc     #$00
	lda     sreg
	sbc     #$00
	lda     sreg+1
	sbc     #$00
	bcs     L015A
	lda     #<(L0162)
	ldx     #>(L0162)
	jsr     pushax
	lda     #$0A
	jsr     leaa0sp
	ldy     #$1C
	clc
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	jsr     pusha
	jsr     _cook
	jsr     pushax
	ldy     #$04
	jsr     _uart_printf
	ldy     #$1D
	jsr     ldeaxysp
	jsr     saveeax
	ldy     #$01
	jsr     inceaxy
	ldy     #$1A
	jsr     steaxysp
	jsr     resteax
	jmp     L0159
L015A:	lda     #<(L0168)
	ldx     #>(L0168)
	jsr     pushax
	ldy     #$02
	jsr     _uart_printf
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	ldy     #$22
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; long __near__ cmd_gpio (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_cmd_gpio: near

.segment	"CODE"

	jsr     decsp3
	lda     _argv+4
	ldx     _argv+4+1
	jsr     pushax
	jsr     _gi_get
	ldy     #$01
	jsr     staxysp
	cpx     #$00
	bne     L023B
	cmp     #$00
	bne     L023B
	lda     #<(L023F)
	ldx     #>(L023F)
	jsr     pushax
	lda     _argv+4
	ldx     _argv+4+1
	jsr     pushax
	ldy     #$04
	jsr     _uart_printf
	ldx     #$FF
	stx     sreg
	stx     sreg+1
	txa
	jmp     incsp3
L023B:	lda     _argv+2
	ldx     _argv+2+1
	jsr     pushax
	lda     #<(L0248)
	ldx     #>(L0248)
	jsr     _strcmp
	cpx     #$00
	jne     L0244
	cmp     #$00
	jne     L0244
	lda     _argv+6
	ora     _argv+6+1
	bne     L024B
	lda     #<(L0250)
	ldx     #>(L0250)
	jsr     pushax
	ldy     #$02
	jsr     _uart_printf
	ldx     #$FF
	stx     sreg
	stx     sreg+1
	txa
	jmp     incsp3
L024B:	lda     _argv+6
	ldx     _argv+6+1
	jsr     pushax
	lda     #<(L0257)
	ldx     #>(L0257)
	jsr     _strcmp
	cpx     #$00
	bne     L0253
	cmp     #$00
	bne     L0253
	ldy     #$02
	jsr     ldaxysp
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	lda     #$00
	jsr     pusha
	jsr     _gpio_init
	jmp     L0293
L0253:	lda     _argv+6
	ldx     _argv+6+1
	jsr     pushax
	lda     #<(L0262)
	ldx     #>(L0262)
	jsr     _strcmp
	cpx     #$00
	bne     L025E
	cmp     #$00
	bne     L025E
	ldy     #$02
	jsr     ldaxysp
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	lda     #$01
	jsr     pusha
	jsr     _gpio_init
	jmp     L0293
L025E:	lda     #<(L026A)
	ldx     #>(L026A)
	jsr     pushax
	lda     _argv+6
	ldx     _argv+6+1
	jsr     pushax
	ldy     #$04
	jsr     _uart_printf
	ldx     #$FF
	stx     sreg
	stx     sreg+1
	txa
	jmp     incsp3
L0244:	lda     _argv+2
	ldx     _argv+2+1
	jsr     pushax
	lda     #<(L0274)
	ldx     #>(L0274)
	jsr     _strcmp
	cpx     #$00
	bne     L0270
	cmp     #$00
	bne     L0270
	ldy     #$02
	jsr     ldaxysp
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	jsr     _gpio_read
	ldy     #$00
	sta     (sp),y
	lda     #<(L027B)
	ldx     #>(L027B)
	jsr     pushax
	ldy     #$02
	lda     (sp),y
	jsr     pusha0
	ldy     #$04
	jsr     _uart_printf
	jmp     L0293
L0270:	lda     _argv+2
	ldx     _argv+2+1
	jsr     pushax
	lda     #<(L0283)
	ldx     #>(L0283)
	jsr     _strcmp
	cpx     #$00
	bne     L0293
	cmp     #$00
	bne     L0293
	ldy     #$02
	jsr     ldaxysp
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	lda     #$01
	jsr     pusha
	jsr     _gpio_init
	lda     _argv+6
	ldx     _argv+6+1
	jsr     pushax
	lda     #<(L028D)
	ldx     #>(L028D)
	jsr     _strcmp
	cpx     #$00
	bne     L0289
	cmp     #$00
	bne     L0289
	ldy     #$02
	jsr     ldaxysp
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	lda     #$00
	jmp     L03B4
L0289:	ldy     #$02
	jsr     ldaxysp
	ldy     #$13
	jsr     ldeaxidx
	jsr     pusheax
	lda     #$01
L03B4:	jsr     pusha
	jsr     _gpio_write
L0293:	lda     #<(L0298)
	ldx     #>(L0298)
	jsr     pushax
	ldy     #$02
	jsr     _uart_printf
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	jmp     incsp3

.endproc

; ---------------------------------------------------------------
; long __near__ cmd_ps2 (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_cmd_ps2: near

.segment	"CODE"

	ldy     #$00
	jsr     _ps2_process
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	rts

.endproc

; ---------------------------------------------------------------
; long __near__ cmd_vga (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_cmd_vga: near

.segment	"CODE"

	ldy     #$09
	jsr     subysp
	lda     _argv+2
	ldx     _argv+2+1
	jsr     pushax
	lda     #<(L02A3)
	ldx     #>(L02A3)
	jsr     _strcmp
	cpx     #$00
	bne     L029F
	cmp     #$00
	bne     L029F
	lda     #<(L02A7)
	ldx     #>(L02A7)
	jsr     pushax
	ldy     #$02
	jsr     _uart_printf
	ldx     #$00
	lda     #$80
	jsr     push0ax
	ldy     #$04
	jsr     _vga_ctrl
	lda     #<(L02AC)
	ldx     #>(L02AC)
	jsr     pushax
	ldy     #$02
	jsr     _uart_printf
	jmp     L0307
L029F:	lda     _argv+2
	ldx     _argv+2+1
	jsr     pushax
	lda     #<(L02B3)
	ldx     #>(L02B3)
	jsr     _strcmp
	cpx     #$00
	bne     L02AF
	cmp     #$00
	bne     L02AF
	lda     _argv+4
	ldx     _argv+4+1
	jsr     pushax
	jsr     push0
	jsr     _strtoul
	ldy     #$00
	sta     (sp),y
	ldx     #$00
	lda     #$81
	jsr     push0ax
	ldy     #$04
	lda     (sp),y
	jsr     pusha0
	ldy     #$06
	jsr     _vga_ctrl
	jmp     L0307
L02AF:	lda     _argv+2
	ldx     _argv+2+1
	jsr     pushax
	lda     #<(L02C4)
	ldx     #>(L02C4)
	jsr     _strcmp
	cpx     #$00
	bne     L02C0
	cmp     #$00
	bne     L02C0
	lda     _argv+4
	ldx     _argv+4+1
	jsr     pushax
	jsr     push0
	jsr     _strtoul
	ldy     #$05
	jsr     steaxysp
	lda     _argv+6
	ldx     _argv+6+1
	jsr     pushax
	jsr     push0
	jsr     _strtoul
	ldy     #$01
	jsr     steaxysp
	lda     _argv+8
	ldx     _argv+8+1
	jsr     pushax
	jsr     push0
	jsr     _strtoul
	ldy     #$00
	sta     (sp),y
	ldx     #$00
	lda     #$82
	jsr     push0ax
	ldy     #$0C
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$0C
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$0C
	lda     (sp),y
	jsr     pusha0
	ldy     #$0E
	jsr     _vga_ctrl
	jmp     L0307
L02C0:	lda     _argv+2
	ldx     _argv+2+1
	jsr     pushax
	lda     #<(L02E3)
	ldx     #>(L02E3)
	jsr     _strcmp
	cpx     #$00
	jne     L02DF
	cmp     #$00
	jne     L02DF
	sta     sreg
	sta     sreg+1
	ldy     #$05
	jsr     steaxysp
L03B6:	ldy     #$01
	jsr     steaxysp
L02EA:	ldy     #$00
	jsr     _ps2_getc
	ldy     #$00
	sta     (sp),y
	ldx     #$00
	lda     #$82
	jsr     push0ax
	ldy     #$0C
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$0C
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$0C
	lda     (sp),y
	jsr     pusha0
	ldy     #$0E
	jsr     _vga_ctrl
	ldy     #$08
	jsr     ldeaxysp
	jsr     saveeax
	ldy     #$01
	jsr     inceaxy
	ldy     #$05
	jsr     steaxysp
	jsr     resteax
	ldy     #$08
	jsr     ldeaxysp
	jsr     pusheax
	ldx     #$00
	stx     sreg
	stx     sreg+1
	lda     #$3F
	jsr     toseqeax
	beq     L02F6
	ldx     #$00
	txa
	ldy     #$05
	jsr     steaxysp
	ldy     #$04
	jsr     ldeaxysp
	jsr     saveeax
	ldy     #$01
	jsr     inceaxy
	ldy     #$01
	jsr     steaxysp
	jsr     resteax
L02F6:	ldy     #$04
	jsr     ldeaxysp
	jsr     pusheax
	ldx     #$00
	stx     sreg
	stx     sreg+1
	lda     #$14
	jsr     toseqeax
	jeq     L02EA
	ldx     #$00
	txa
	jmp     L03B6
L02DF:	lda     _argv+2
	ldx     _argv+2+1
	jsr     pushax
	lda     #<(L030B)
	ldx     #>(L030B)
	jsr     _strcmp
	cpx     #$00
	bne     L0307
	cmp     #$00
	bne     L03B7
	lda     #<(L030F)
	ldx     #>(L030F)
	jsr     pushax
	lda     _argv+4
	ldx     _argv+4+1
	jsr     pushax
	ldy     #$04
	jsr     _uart_printf
	lda     #<(L0314)
	ldx     #>(L0314)
	jsr     pushax
	lda     _argv+4
	ldx     _argv+4+1
	jsr     pushax
	ldy     #$04
	jsr     _vga_printf
L0307:	ldx     #$00
L03B7:	stx     sreg
	stx     sreg+1
	txa
	ldy     #$09
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; long __near__ cmd_uptime (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_cmd_uptime: near

.segment	"CODE"

	lda     #<(L031B)
	ldx     #>(L031B)
	jsr     pushax
	lda     _hours
	jsr     pusha0
	lda     _minutes
	jsr     pusha0
	lda     _seconds
	jsr     pusha0
	ldy     #$08
	jsr     _uart_printf
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	rts

.endproc

; ---------------------------------------------------------------
; long __near__ cmd_help (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_cmd_help: near

.segment	"CODE"

	jsr     decsp4
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	jsr     steax0sp
L0322:	jsr     ldeax0sp
	cmp     #$0A
	txa
	sbc     #$00
	lda     sreg
	sbc     #$00
	lda     sreg+1
	sbc     #$00
	bcs     L0323
	lda     #<(L032F)
	ldx     #>(L032F)
	jsr     pushax
	ldy     #$05
	jsr     ldeaxysp
	jsr     mulax6
	clc
	adc     #<(_ci)
	tay
	txa
	adc     #>(_ci)
	tax
	tya
	jsr     pushw
	ldy     #$07
	jsr     ldeaxysp
	jsr     mulax6
	clc
	adc     #<(_ci)
	tay
	txa
	adc     #>(_ci)
	tax
	tya
	ldy     #$05
	jsr     pushwidx
	ldy     #$06
	jsr     _uart_printf
	jsr     ldeax0sp
	jsr     saveeax
	ldy     #$01
	jsr     inceaxy
	jsr     steax0sp
	jsr     resteax
	jmp     L0322
L0323:	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ cook (unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_cook: near

.segment	"CODE"

	ldy     #$00
	lda     (sp),y
	cmp     #$20
	ldx     #$00
	bcc     L03BB
	lda     (sp),y
	cmp     #$7F
	bcs     L03BB
	jmp     incsp1
L03BB:	lda     #$2E
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; __near__ struct gpio_info * __near__ gi_get (__near__ unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_gi_get: near

.segment	"CODE"

	jsr     decsp2
	ldy     #$02
	lda     (sp),y
	iny
	ora     (sp),y
	bne     L021D
	tax
	jmp     incsp4
L021D:	ldx     #$00
	txa
L03BE:	jsr     stax0sp
	ldy     #$01
	lda     (sp),y
	cmp     #$00
	bne     L022B
	dey
	lda     (sp),y
	cmp     #$20
L022B:	bcs     L0222
	jsr     pushw0sp
	lda     #$14
	jsr     tosmula0
	clc
	adc     #<(_gi)
	tay
	txa
	adc     #>(_gi)
	tax
	tya
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	jsr     _strcmp
	cpx     #$00
	bne     L0223
	cmp     #$00
	bne     L0223
	jsr     pushw0sp
	lda     #$14
	jsr     tosmula0
	clc
	adc     #<(_gi)
	tay
	txa
	adc     #>(_gi)
	tax
	tya
	jmp     incsp4
L0223:	jsr     ldax0sp
	jsr     incax1
	jmp     L03BE
L0222:	ldx     #$00
	txa
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; long __near__ parse_cmd (__near__ unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_parse_cmd: near

.segment	"CODE"

	jsr     decsp8
	lda     #>(_argv)
	sta     ptr1+1
	lda     #<(_argv)
	sta     ptr1
	lda     #$00
	ldy     #$0B
L03BF:	sta     (ptr1),y
	dey
	bpl     L03BF
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	jsr     steax0sp
	ldy     #$04
	jsr     steaxysp
L0340:	ldy     #$0B
	jsr     pushwysp
	ldy     #$09
	jsr     ldeaxysp
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	bne     L034A
	jmp     L03C4
L0348:	ldy     #$07
	jsr     ldeaxysp
	jsr     saveeax
	ldy     #$01
	jsr     inceaxy
	ldy     #$04
	jsr     steaxysp
	jsr     resteax
L034A:	ldy     #$0B
	jsr     pushwysp
	ldy     #$09
	jsr     ldeaxysp
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	cmp     #$20
	beq     L0348
	jsr     ldeax0sp
	jsr     saveeax
	ldy     #$01
	jsr     inceaxy
	jsr     steax0sp
	jsr     resteax
	jsr     aslax1
	clc
	adc     #<(_argv)
	tay
	txa
	adc     #>(_argv)
	tax
	tya
	jsr     pushax
	ldy     #$0D
	jsr     pushwysp
	ldy     #$0B
	jsr     ldeaxysp
	jsr     tosaddax
	ldy     #$00
	jsr     staxspidx
	jsr     ldeax0sp
	jsr     pusheax
	ldx     #$00
	stx     sreg
	stx     sreg+1
	lda     #$06
	jsr     toseqeax
	beq     L0357
	jmp     L0341
L0355:	ldy     #$07
	jsr     ldeaxysp
	jsr     saveeax
	ldy     #$01
	jsr     inceaxy
	ldy     #$04
	jsr     steaxysp
	jsr     resteax
L0357:	ldy     #$0B
	jsr     pushwysp
	ldy     #$09
	jsr     ldeaxysp
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	cmp     #$20
	jeq     L0340
	ldy     #$0B
	jsr     pushwysp
	ldy     #$09
	jsr     ldeaxysp
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	bne     L0355
	jmp     L0340
L0341:	ldy     #$00
L03C4:	lda     (sp),y
	sta     _argc
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	ldy     #$04
	jsr     steaxysp
L0360:	ldy     #$0B
	jsr     pushwysp
	ldy     #$09
	jsr     ldeaxysp
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     (ptr1,x)
	beq     L03C5
	ldy     #$0B
	jsr     pushwysp
	ldy     #$09
	jsr     ldeaxysp
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	cmp     #$20
	bne     L0362
	ldy     #$0B
	jsr     pushwysp
	ldy     #$09
	jsr     ldeaxysp
	jsr     tosaddax
	sta     sreg
	stx     sreg+1
	lda     #$00
	tay
	sta     (sreg),y
L0362:	ldy     #$07
	jsr     ldeaxysp
	jsr     saveeax
	ldy     #$01
	jsr     inceaxy
	ldy     #$04
	jsr     steaxysp
	jsr     resteax
	jmp     L0360
L03C5:	sta     sreg
	sta     sreg+1
	ldy     #$0A
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; long __near__ get_cmd_index (__near__ unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_get_cmd_index: near

.segment	"CODE"

	jsr     decsp4
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	jsr     steax0sp
L0371:	jsr     ldeax0sp
	cmp     #$0A
	txa
	sbc     #$00
	lda     sreg
	sbc     #$00
	lda     sreg+1
	sbc     #$00
	bcs     L0372
	jsr     ldeax0sp
	jsr     mulax6
	clc
	adc     #<(_ci)
	tay
	txa
	adc     #>(_ci)
	tax
	tya
	jsr     pushw
	ldy     #$07
	jsr     ldaxysp
	jsr     _strcmp
	cpx     #$00
	bne     L0373
	cmp     #$00
	bne     L0373
	jsr     ldeax0sp
	jmp     incsp6
L0373:	jsr     ldeax0sp
	jsr     saveeax
	ldy     #$01
	jsr     inceaxy
	jsr     steax0sp
	jsr     resteax
	jmp     L0371
L0372:	ldx     #$FF
	stx     sreg
	stx     sreg+1
	txa
	jmp     incsp6

.endproc

; ---------------------------------------------------------------
; long __near__ uart_shell (__near__ unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_uart_shell: near

.segment	"RODATA"

L038F:
	.word	$0000
L03A2:
	.word	$0000

.segment	"CODE"

	jsr     decsp8
	jsr     pushl0
	ldy     #$0D
	jsr     ldaxysp
	jsr     _strlen
	jsr     axulong
	ldy     #$04
	jsr     steaxysp
	ldy     #$07
	jsr     ldeaxysp
	jsr     pusheax
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	jsr     toseqeax
	beq     L038A
	ldx     #$00
	txa
	jsr     steax0sp
	jmp     L038E
L038A:	lda     #<(L0391)
	ldx     #>(L0391)
	jsr     pushax
	ldy     #$02
	jsr     _uart_printf
	ldy     #$0F
	jsr     pushwysp
	jsr     _parse_cmd
	lda     _argv
	ldx     _argv+1
	jsr     pushax
	jsr     _get_cmd_index
	ldy     #$08
	jsr     steaxysp
	jsr     pusheax
	ldx     #$FF
	stx     sreg
	stx     sreg+1
	txa
	jsr     toseqeax
	beq     L0395
	lda     #<(L039C)
	ldx     #>(L039C)
	jsr     pushax
	lda     _argv
	ldx     _argv+1
	jsr     pushax
	ldy     #$04
	jsr     _uart_printf
	ldx     #$FF
	stx     sreg
	stx     sreg+1
	txa
	jsr     steax0sp
	jmp     L038E
L0395:	ldy     #$0B
	jsr     ldeaxysp
	jsr     mulax6
	clc
	adc     #<(_ci)
	tay
	txa
	adc     #>(_ci)
	tax
	tya
	ldy     #$03
	jsr     ldaxidx
	jsr     callax
	jsr     steax0sp
	lda     #<(L03A7)
	ldx     #>(L03A7)
	jsr     pushax
	ldy     #$05
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$06
	jsr     _uart_printf
L038E:	lda     #<(L03AC)
	ldx     #>(L03AC)
	jsr     pushax
	ldy     #$02
	jsr     _uart_printf
	jsr     ldeax0sp
	ldy     #$0E
	jmp     addysp

.endproc

