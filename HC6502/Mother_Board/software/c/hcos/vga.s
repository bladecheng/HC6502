;
; File generated by cc65 v 2.17 - Git 180bb08
;
	.fopt		compiler,"cc65 v 2.17 - Git 180bb08"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		_uart_printf
	.import		_gpio_init
	.import		_gpio_write
	.import		_gpio_read
	.import		_mdelay
	.export		_vga_ctrl
	.export		_vga_init
	.export		_vi
	.export		_vga_write

.segment	"DATA"

_vi:
	.dword	$7F2000B2
	.dword	$7F2000B3
	.dword	$7F4000A0
	.dword	$7F4000A1
	.dword	$7F4000A2
	.dword	$7F4000A3
	.dword	$7F4000A4
	.dword	$7F4000A5
	.dword	$7F4000A6
	.dword	$7F4000A7

.segment	"RODATA"

L0060:
	.byte	$77,$61,$69,$74,$20,$72,$73,$70,$20,$72,$65,$61,$64,$79,$2E,$2E
	.byte	$2E,$0A,$00
L003C	:=	L0060+0
L00AE:
	.byte	$70,$6F,$73,$5F,$79,$3A,$20,$25,$64,$0A,$00
L00B2:
	.byte	$63,$68,$3A,$20,$20,$20,$20,$25,$63,$0A,$00
L00AA:
	.byte	$70,$6F,$73,$5F,$78,$3A,$20,$25,$64,$0A,$00
L0072:
	.byte	$65,$6E,$74,$65,$72,$20,$25,$73,$20,$0A,$00
L00BD:
	.byte	$65,$78,$69,$74,$20,$25,$73,$20,$0A,$00
L0074:
	.byte	$76,$67,$61,$5F,$63,$74,$72,$6C,$00
L00BF	:=	L0074+0
L0046:
	.byte	$6F,$6B,$2E,$0A,$00
L006A:
	.byte	$6F,$6B,$00

; ---------------------------------------------------------------
; long __near__ vga_ctrl (unsigned long)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_vga_ctrl: near

.segment	"CODE"

	jsr     enter
	ldy     #$0B
	jsr     subysp
	lda     #<(L0072)
	ldx     #>(L0072)
	jsr     pushax
	lda     #<(L0074)
	ldx     #>(L0074)
	jsr     pushax
	ldy     #$04
	jsr     _uart_printf
	ldy     #$0B
	lda     (sp),y
	jsr     leaa0sp
	jsr     incax8
	jsr     stax0sp
	ldy     #$0B
	lda     (sp),y
	jsr     leaa0sp
	jsr     incax8
	jsr     ldeaxi
	ldy     sreg+1
	cpy     #$00
	jne     L007C
	ldy     sreg
	cpy     #$00
	jne     L007C
	cpx     #$00
	jne     L007C
	cmp     #$80
	beq     L007F
	cmp     #$81
	beq     L008A
	cmp     #$82
	beq     L0091
	cmp     #$83
	beq     L007F
	cmp     #$84
	jne     L007C
L007F:	ldy     #$0B
	lda     (sp),y
	jsr     leaa0sp
	jsr     incax8
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	jmp     L00D9
L008A:	ldy     #$0B
	lda     (sp),y
	jsr     leaa0sp
	jsr     incax8
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	jmp     L00DD
L0091:	ldy     #$0B
	lda     (sp),y
	jsr     leaa0sp
	jsr     incax8
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	jsr     pusha
	jsr     _vga_write
	ldx     #$00
	lda     #$04
	jsr     subeq0sp
	jsr     ldeaxi
	ldy     #$07
	jsr     steaxysp
	ldx     #$00
	lda     #$04
	jsr     subeq0sp
	jsr     ldeaxi
	ldy     #$03
	jsr     steaxysp
	ldx     #$00
	lda     #$02
	jsr     subeq0sp
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	ldy     #$02
	sta     (sp),y
	lda     #<(L00AA)
	ldx     #>(L00AA)
	jsr     pushax
	ldy     #$0C
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$06
	jsr     _uart_printf
	lda     #<(L00AE)
	ldx     #>(L00AE)
	jsr     pushax
	ldy     #$08
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$06
	jsr     _uart_printf
	lda     #<(L00B2)
	ldx     #>(L00B2)
	jsr     pushax
	ldy     #$04
	lda     (sp),y
	jsr     pusha0
	ldy     #$04
	jsr     _uart_printf
	ldy     #$07
	lda     (sp),y
	jsr     pusha
	jsr     _vga_write
	ldy     #$03
	lda     (sp),y
L00DD:	jsr     pusha
	jsr     _vga_write
	ldy     #$02
	lda     (sp),y
L00D9:	jsr     pusha
	jsr     _vga_write
L007C:	lda     #<(L00BD)
	ldx     #>(L00BD)
	jsr     pushax
	lda     #<(L00BF)
	ldx     #>(L00BF)
	jsr     pushax
	ldy     #$04
	jsr     _uart_printf
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	ldy     #$0B
	jmp     leavey

.endproc

; ---------------------------------------------------------------
; void __near__ vga_init (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_vga_init: near

.segment	"CODE"

	jsr     decsp1
	lda     _vi+3
	sta     sreg+1
	lda     _vi+2
	sta     sreg
	ldx     _vi+1
	lda     _vi
	jsr     pusheax
	lda     #$01
	jsr     pusha
	jsr     _gpio_init
	lda     _vi+4+3
	sta     sreg+1
	lda     _vi+4+2
	sta     sreg
	ldx     _vi+4+1
	lda     _vi+4
	jsr     pusheax
	lda     #$00
	jsr     pusha
	jsr     _gpio_init
	lda     #$00
	tay
L00E0:	sta     (sp),y
	cmp     #$08
	bcs     L00CA
	ldx     #$00
	lda     (sp),y
	jsr     aslax2
	clc
	adc     #<(_vi+8)
	tay
	txa
	adc     #>(_vi+8)
	tax
	tya
	jsr     ldeaxi
	jsr     pusheax
	lda     #$00
	jsr     pusha
	jsr     _gpio_init
	ldy     #$00
	lda     (sp),y
	clc
	adc     #$01
	jmp     L00E0
L00CA:	lda     _vi+3
	sta     sreg+1
	lda     _vi+2
	sta     sreg
	ldx     _vi+1
	lda     _vi
	jsr     pusheax
	lda     #$00
	jsr     pusha
	jsr     _gpio_write
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ vga_write (unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_vga_write: near

.segment	"CODE"

	jsr     decsp1
	lda     _vi+3
	sta     sreg+1
	lda     _vi+2
	sta     sreg
	ldx     _vi+1
	lda     _vi
	jsr     pusheax
	lda     #$00
	jsr     pusha
	jsr     _gpio_write
	lda     #$64
	jsr     pusha0
	jsr     _mdelay
	lda     #<(L003C)
	ldx     #>(L003C)
	jsr     pushax
	ldy     #$02
	jsr     _uart_printf
L003E:	lda     _vi+4+3
	sta     sreg+1
	lda     _vi+4+2
	sta     sreg
	ldx     _vi+4+1
	lda     _vi+4
	jsr     pusheax
	jsr     _gpio_read
	cmp     #$01
	bne     L003E
	lda     #<(L0046)
	ldx     #>(L0046)
	jsr     pushax
	ldy     #$02
	jsr     _uart_printf
	lda     #$00
	tay
L00E5:	sta     (sp),y
	cmp     #$08
	bcs     L0049
	lda     (sp),y
	tay
	lda     #$01
	ldx     #$00
	jsr     aslaxy
	ldy     #$01
	and     (sp),y
	pha
	pla
	beq     L0050
	ldx     #$00
	lda     (sp,x)
	jsr     aslax2
	clc
	adc     #<(_vi+8)
	tay
	txa
	adc     #>(_vi+8)
	tax
	tya
	jsr     ldeaxi
	jsr     pusheax
	lda     #$01
	jmp     L00E4
L0050:	tax
	lda     (sp,x)
	jsr     aslax2
	clc
	adc     #<(_vi+8)
	tay
	txa
	adc     #>(_vi+8)
	tax
	tya
	jsr     ldeaxi
	jsr     pusheax
	lda     #$00
L00E4:	jsr     pusha
	jsr     _gpio_write
	ldy     #$00
	lda     (sp),y
	clc
	adc     #$01
	jmp     L00E5
L0049:	lda     _vi+3
	sta     sreg+1
	lda     _vi+2
	sta     sreg
	ldx     _vi+1
	lda     _vi
	jsr     pusheax
	lda     #$01
	jsr     pusha
	jsr     _gpio_write
	lda     #<(L0060)
	ldx     #>(L0060)
	jsr     pushax
	ldy     #$02
	jsr     _uart_printf
L0062:	lda     _vi+4+3
	sta     sreg+1
	lda     _vi+4+2
	sta     sreg
	ldx     _vi+4+1
	lda     _vi+4
	jsr     pusheax
	jsr     _gpio_read
	cmp     #$01
	bne     L0062
	lda     #<(L006A)
	ldx     #>(L006A)
	jsr     pushax
	ldy     #$02
	jsr     _uart_printf
	lda     _vi+3
	sta     sreg+1
	lda     _vi+2
	sta     sreg
	ldx     _vi+1
	lda     _vi
	jsr     pusheax
	lda     #$00
	jsr     pusha
	jsr     _gpio_write
	ldy     #$01
	ldx     #$00
	lda     (sp),y
	jmp     incsp2

.endproc

