                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Mar 28 2016) (Linux)
                                      4 ; This file was generated Mon Dec  3 17:37:04 2018
                                      5 ;--------------------------------------------------------
                                      6 	.module main
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _main
                                     13 	.globl _mdelay
                                     14 ;--------------------------------------------------------
                                     15 ; ram data
                                     16 ;--------------------------------------------------------
                                     17 	.area DATA
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area INITIALIZED
                                     22 ;--------------------------------------------------------
                                     23 ; Stack segment in internal ram 
                                     24 ;--------------------------------------------------------
                                     25 	.area	SSEG
      000000                         26 __start__stack:
      000000                         27 	.ds	1
                                     28 
                                     29 ;--------------------------------------------------------
                                     30 ; absolute external ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DABS (ABS)
                                     33 ;--------------------------------------------------------
                                     34 ; interrupt vector 
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
      000000                         37 __interrupt_vect:
      000000 82v00u00u00             38 	int s_GSINIT ;reset
      000004 82 00 00 00             39 	int 0x0000 ;trap
      000008 82 00 00 00             40 	int 0x0000 ;int0
      00000C 82 00 00 00             41 	int 0x0000 ;int1
      000010 82 00 00 00             42 	int 0x0000 ;int2
      000014 82 00 00 00             43 	int 0x0000 ;int3
      000018 82 00 00 00             44 	int 0x0000 ;int4
      00001C 82 00 00 00             45 	int 0x0000 ;int5
      000020 82 00 00 00             46 	int 0x0000 ;int6
      000024 82 00 00 00             47 	int 0x0000 ;int7
      000028 82 00 00 00             48 	int 0x0000 ;int8
      00002C 82 00 00 00             49 	int 0x0000 ;int9
      000030 82 00 00 00             50 	int 0x0000 ;int10
      000034 82 00 00 00             51 	int 0x0000 ;int11
      000038 82 00 00 00             52 	int 0x0000 ;int12
      00003C 82 00 00 00             53 	int 0x0000 ;int13
      000040 82 00 00 00             54 	int 0x0000 ;int14
      000044 82 00 00 00             55 	int 0x0000 ;int15
      000048 82 00 00 00             56 	int 0x0000 ;int16
      00004C 82 00 00 00             57 	int 0x0000 ;int17
      000050 82 00 00 00             58 	int 0x0000 ;int18
      000054 82 00 00 00             59 	int 0x0000 ;int19
      000058 82 00 00 00             60 	int 0x0000 ;int20
      00005C 82 00 00 00             61 	int 0x0000 ;int21
      000060 82 00 00 00             62 	int 0x0000 ;int22
      000064 82 00 00 00             63 	int 0x0000 ;int23
      000068 82 00 00 00             64 	int 0x0000 ;int24
      00006C 82 00 00 00             65 	int 0x0000 ;int25
      000070 82 00 00 00             66 	int 0x0000 ;int26
      000074 82 00 00 00             67 	int 0x0000 ;int27
      000078 82 00 00 00             68 	int 0x0000 ;int28
      00007C 82 00 00 00             69 	int 0x0000 ;int29
                                     70 ;--------------------------------------------------------
                                     71 ; global & static initialisations
                                     72 ;--------------------------------------------------------
                                     73 	.area HOME
                                     74 	.area GSINIT
                                     75 	.area GSFINAL
                                     76 	.area GSINIT
      000000                         77 __sdcc_gs_init_startup:
      000000                         78 __sdcc_init_data:
                                     79 ; stm8_genXINIT() start
      000000 AEr00r00         [ 2]   80 	ldw x, #l_DATA
      000003 27 07            [ 1]   81 	jreq	00002$
      000005                         82 00001$:
      000005 72 4FuFFuFF      [ 1]   83 	clr (s_DATA - 1, x)
      000009 5A               [ 2]   84 	decw x
      00000A 26 F9            [ 1]   85 	jrne	00001$
      00000C                         86 00002$:
      00000C AEr00r00         [ 2]   87 	ldw	x, #l_INITIALIZER
      00000F 27 09            [ 1]   88 	jreq	00004$
      000011                         89 00003$:
      000011 D6uFFuFF         [ 1]   90 	ld	a, (s_INITIALIZER - 1, x)
      000014 D7uFFuFF         [ 1]   91 	ld	(s_INITIALIZED - 1, x), a
      000017 5A               [ 2]   92 	decw	x
      000018 26 F7            [ 1]   93 	jrne	00003$
      00001A                         94 00004$:
                                     95 ; stm8_genXINIT() end
                                     96 	.area GSFINAL
      000000 CCr00r80         [ 2]   97 	jp	__sdcc_program_startup
                                     98 ;--------------------------------------------------------
                                     99 ; Home
                                    100 ;--------------------------------------------------------
                                    101 	.area HOME
                                    102 	.area HOME
      000080                        103 __sdcc_program_startup:
      000080 CCr00r22         [ 2]  104 	jp	_main
                                    105 ;	return from main will return to caller
                                    106 ;--------------------------------------------------------
                                    107 ; code
                                    108 ;--------------------------------------------------------
                                    109 	.area CODE
                                    110 ;	main.c: 19: void mdelay(unsigned int ms)
                                    111 ;	-----------------------------------------
                                    112 ;	 function mdelay
                                    113 ;	-----------------------------------------
      000000                        114 _mdelay:
      000000 52 04            [ 2]  115 	sub	sp, #4
                                    116 ;	main.c: 22: for(i = 0; i < ms; i++) {
      000002 5F               [ 1]  117 	clrw	x
      000003 1F 01            [ 2]  118 	ldw	(0x01, sp), x
      000005                        119 00107$:
      000005 16 01            [ 2]  120 	ldw	y, (0x01, sp)
      000007 93               [ 1]  121 	ldw	x, y
      000008 13 07            [ 2]  122 	cpw	x, (0x07, sp)
      00000A 24 13            [ 1]  123 	jrnc	00109$
                                    124 ;	main.c: 23: for(x = 0; x < 100; x++);
      00000C AE 00 64         [ 2]  125 	ldw	x, #0x0064
      00000F                        126 00105$:
      00000F 5A               [ 2]  127 	decw	x
      000010 1F 03            [ 2]  128 	ldw	(0x03, sp), x
      000012 1E 03            [ 2]  129 	ldw	x, (0x03, sp)
      000014 16 03            [ 2]  130 	ldw	y, (0x03, sp)
      000016 26 F7            [ 1]  131 	jrne	00105$
                                    132 ;	main.c: 22: for(i = 0; i < ms; i++) {
      000018 1E 01            [ 2]  133 	ldw	x, (0x01, sp)
      00001A 5C               [ 2]  134 	incw	x
      00001B 1F 01            [ 2]  135 	ldw	(0x01, sp), x
      00001D 20 E6            [ 2]  136 	jra	00107$
      00001F                        137 00109$:
      00001F 5B 04            [ 2]  138 	addw	sp, #4
      000021 81               [ 4]  139 	ret
                                    140 ;	main.c: 27: void main()
                                    141 ;	-----------------------------------------
                                    142 ;	 function main
                                    143 ;	-----------------------------------------
      000022                        144 _main:
                                    145 ;	main.c: 31: PB_DDR |= 0x20;
      000022 AE 50 07         [ 2]  146 	ldw	x, #0x5007
      000025 F6               [ 1]  147 	ld	a, (x)
      000026 AA 20            [ 1]  148 	or	a, #0x20
      000028 F7               [ 1]  149 	ld	(x), a
                                    150 ;	main.c: 32: PB_CR1 |= 0x20;
      000029 AE 50 08         [ 2]  151 	ldw	x, #0x5008
      00002C F6               [ 1]  152 	ld	a, (x)
      00002D AA 20            [ 1]  153 	or	a, #0x20
      00002F F7               [ 1]  154 	ld	(x), a
                                    155 ;	main.c: 33: PB_CR2 |= 0x00;
      000030 AE 50 09         [ 2]  156 	ldw	x, #0x5009
      000033 F6               [ 1]  157 	ld	a, (x)
      000034 AE 50 09         [ 2]  158 	ldw	x, #0x5009
      000037 F7               [ 1]  159 	ld	(x), a
                                    160 ;	main.c: 35: while (1) {
      000038                        161 00102$:
                                    162 ;	main.c: 36: PB_ODR ^= 0x00;
      000038 AE 50 05         [ 2]  163 	ldw	x, #0x5005
      00003B F6               [ 1]  164 	ld	a, (x)
      00003C AE 50 05         [ 2]  165 	ldw	x, #0x5005
      00003F F7               [ 1]  166 	ld	(x), a
                                    167 ;	main.c: 38: mdelay(1000);
      000040 4B E8            [ 1]  168 	push	#0xe8
      000042 4B 03            [ 1]  169 	push	#0x03
      000044 CDr00r00         [ 4]  170 	call	_mdelay
      000047 5B 02            [ 2]  171 	addw	sp, #2
                                    172 ;	main.c: 40: PB_ODR ^= 0xf0;
      000049 AE 50 05         [ 2]  173 	ldw	x, #0x5005
      00004C F6               [ 1]  174 	ld	a, (x)
      00004D A8 F0            [ 1]  175 	xor	a, #0xf0
      00004F F7               [ 1]  176 	ld	(x), a
                                    177 ;	main.c: 42: mdelay(1000);
      000050 4B E8            [ 1]  178 	push	#0xe8
      000052 4B 03            [ 1]  179 	push	#0x03
      000054 CDr00r00         [ 4]  180 	call	_mdelay
      000057 5B 02            [ 2]  181 	addw	sp, #2
      000059 20 DD            [ 2]  182 	jra	00102$
      00005B 81               [ 4]  183 	ret
                                    184 	.area CODE
                                    185 	.area INITIALIZER
                                    186 	.area CABS (ABS)
